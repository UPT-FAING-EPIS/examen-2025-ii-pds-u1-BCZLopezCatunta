name: Deploy Infrastructure

on:
  push:
    branches: [ main ]
    paths: [ 'infrastructure/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'infrastructure/**' ]
  workflow_dispatch:

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0

    - name: Terraform Format Check
      run: terraform fmt -check -recursive
      working-directory: ./infrastructure

    - name: Terraform Init
      run: terraform init
      working-directory: ./infrastructure

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./infrastructure

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      working-directory: ./infrastructure
      env:
        TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        TF_VAR_sql_admin_password: ${{ secrets.SQL_ADMIN_PASSWORD }}

    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: infrastructure/tfplan

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    environment: production
    needs: terraform-plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0

    - name: Download Terraform Plan
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan
        path: infrastructure/

    - name: Terraform Init
      run: terraform init
      working-directory: ./infrastructure

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      working-directory: ./infrastructure
      env:
        TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        TF_VAR_sql_admin_password: ${{ secrets.SQL_ADMIN_PASSWORD }}

    - name: Output Infrastructure URLs
      run: |
        echo "Backend URL: $(terraform output -raw backend_app_url)"
        echo "Frontend URL: $(terraform output -raw frontend_app_url)"
        echo "SQL Server: $(terraform output -raw sql_server_fqdn)"
      working-directory: ./infrastructure

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: [terraform-plan, terraform-apply]
    if: always()
    
    steps:
    - name: Notify Success
      if: needs.terraform-apply.result == 'success'
      run: |
        echo "✅ Infrastructure deployed successfully!"
        echo "Backend: ${{ needs.terraform-apply.outputs.backend_url }}"
        echo "Frontend: ${{ needs.terraform-apply.outputs.frontend_url }}"

    - name: Notify Failure
      if: needs.terraform-apply.result == 'failure'
      run: |
        echo "❌ Infrastructure deployment failed!"
        exit 1
